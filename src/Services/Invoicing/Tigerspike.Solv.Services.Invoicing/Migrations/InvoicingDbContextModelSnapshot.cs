// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tigerspike.Solv.Services.Invoicing.Context;

namespace Tigerspike.Solv.Services.Invoicing.Migrations
{
    [DbContext(typeof(InvoicingDbContext))]
    partial class InvoicingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.AdvocateInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdvocateId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("InvoicingCycleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PaymentFailureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("PlatformBillingDetailsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("varchar(95) CHARACTER SET utf8mb4");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("Id");

                    b.HasIndex("AdvocateId");

                    b.HasIndex("InvoicingCycleId");

                    b.HasIndex("PlatformBillingDetailsId");

                    b.HasIndex("AdvocateId", "ReferenceNumber")
                        .IsUnique();

                    b.HasIndex("AdvocateId", "Sequence")
                        .IsUnique();

                    b.ToTable("AdvocateInvoice");
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.AdvocateInvoiceLineItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AdvocateInvoiceId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("char(36)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("TicketsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdvocateInvoiceId");

                    b.HasIndex("BrandId");

                    b.ToTable("AdvocateInvoiceLineItem");
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.BillingDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CompanyNumber")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.Property<bool>("IsPlatformOwner")
                        .HasColumnType("bit(1)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<string>("VatNumber")
                        .HasColumnType("varchar(30) CHARACTER SET utf8mb4")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.ClientInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid>("BrandBillingDetailsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("InvoiceTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid>("InvoicingCycleId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("PaymentFailureDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("PaymentTotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid>("PlatformBillingDetailsId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("varchar(95) CHARACTER SET utf8mb4");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("TicketsCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal?>("VatRate")
                        .HasColumnType("decimal(6,4)");

                    b.HasKey("Id");

                    b.HasIndex("BrandBillingDetailsId");

                    b.HasIndex("BrandId");

                    b.HasIndex("InvoicingCycleId");

                    b.HasIndex("PlatformBillingDetailsId");

                    b.HasIndex("ReferenceNumber")
                        .IsUnique();

                    b.HasIndex("Sequence")
                        .IsUnique();

                    b.ToTable("ClientInvoice");
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.InvoicingCycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("To")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasAlternateKey("From");

                    b.HasAlternateKey("To");

                    b.ToTable("InvoicingCycle");
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AdvocateInvoiceLineItemId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<Guid?>("ClientInvoiceId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasAlternateKey("ReferenceNumber");

                    b.HasIndex("AdvocateInvoiceLineItemId")
                        .IsUnique();

                    b.HasIndex("ClientInvoiceId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.Sequence", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Sequence");
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.AdvocateInvoice", b =>
                {
                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.InvoicingCycle", "InvoicingCycle")
                        .WithMany()
                        .HasForeignKey("InvoicingCycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.BillingDetails", "PlatformBillingDetails")
                        .WithMany()
                        .HasForeignKey("PlatformBillingDetailsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.AdvocateInvoiceLineItem", b =>
                {
                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.AdvocateInvoice", "AdvocateInvoice")
                        .WithMany("LineItems")
                        .HasForeignKey("AdvocateInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.ClientInvoice", b =>
                {
                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.BillingDetails", "BrandBillingDetails")
                        .WithMany()
                        .HasForeignKey("BrandBillingDetailsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.InvoicingCycle", "InvoicingCycle")
                        .WithMany()
                        .HasForeignKey("InvoicingCycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.BillingDetails", "PlatformBillingDetails")
                        .WithMany()
                        .HasForeignKey("PlatformBillingDetailsId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Tigerspike.Solv.Services.Invoicing.Domain.Payment", b =>
                {
                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.AdvocateInvoiceLineItem", "AdvocateInvoiceLineItem")
                        .WithOne("Payment")
                        .HasForeignKey("Tigerspike.Solv.Services.Invoicing.Domain.Payment", "AdvocateInvoiceLineItemId");

                    b.HasOne("Tigerspike.Solv.Services.Invoicing.Domain.ClientInvoice", null)
                        .WithMany()
                        .HasForeignKey("ClientInvoiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
